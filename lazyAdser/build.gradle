plugins {
    id 'com.android.library'
    id 'maven-publish'
}

def _versionName = "0.0.8"
def _versionCode = 8

android {
    namespace 'com.lazylibs.adser'
    compileSdk 33
    defaultConfig {
        minSdk 24
        targetSdk 33
        consumerProguardFiles "consumer-rules.pro"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    flavorDimensions 'default'
    publishing {
        // Publishes "fullRelease" build variant with "fullRelease" component created by
        // Android Gradle plugin
        singleVariant("jitpackRelease")
    }
    productFlavors {
        jitpack {
            dimension 'default'
            versionCode _versionCode
            versionName _versionName
        }
    }
}

dependencies {
    implementation 'com.android.installreferrer:installreferrer:2.2'
    implementation 'com.adjust.sdk:adjust-android:4.33.4'
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-core:2.5.1'
}
task comps {
    afterEvaluate {
        println("Components: " + components*.name)
    }
}
def _pom = {
    name = 'lazylibs-adser'
//                packaging 'aar'
    description = 'a adjust(.com) target audience identification libs.'
    url = 'https://github.com/lazy2b/LazyAdser'
    licenses {
        license {
            name = 'The Apache License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
        }
    }
    developers {
        developer {
            id = 'lazy2b'
            name = 'jack.rezie'
            email = 'rezielibs@gmail.com'
        }
    }
    scm {
        connection = 'scm:git:https://github.com/lazy2b/LazyAdser.git'
        developerConnection = 'scm:git:https://github.com/lazy2b/LazyAdser.git'
        url = 'https://github.com/lazy2b/LazyAdser'
    }
}
afterEvaluate {
    publishing {
        publications {
            jitpackRelease(MavenPublication) {
                from components.jitpackRelease
                groupId = 'com.lazylibs'
                artifactId = 'adser'
                version = _versionName
                pom = _pom
            }
        }
    }
}

//    Maven publishing DSL object for configuring options related to publishing AAR.
//------1------
//    To publish just one variant, use singleVariant. The following sets up publishing of only the fullRelease variant of an android library.
//    This project has four build variants: fullDebug, fullRelease, demoDebug, demoRelease
//    android {
//        // This project has four build variants: fullDebug, fullRelease, demoDebug, demoRelease
//        flavorDimensions 'mode'
//        productFlavors {
//            full {}
//            demo {}
//        }
//
//        publishing {
//            // Publishes "fullRelease" build variant with "fullRelease" component created by
//            // Android Gradle plugin
//            singleVariant("fullRelease")
//        }
//    }
//    afterEvaluate {
//        publishing {
//            publications {
//                fullRelease(MavenPublication) {
//                    from components.fullRelease
//                    // ......
//                }
//            }
//        }
//    }
//------2------
//   To publish multiple variants, use multipleVariants. The following sets up publishing of both fullDebug and fullRelease variants of an android library.
//    android {
//        publishing {
//            // Published fullDebug and fullRelease build variants with "full" component created by
//            // Android Gradle Plugin. The buildType attribute is added to published build variants.
//            // As only a single flavor from "mode" dimension is included, no flavor attribute is
//            // included.
//            multipleVariants("full") {
//                includeBuildTypeValues("debug", "release")
//                includeFlavorDimensionAndValues("mode", "full")
//            }
//        }
//    }
//    afterEvaluate {
//        publishing {
//            publications {
//                full(MavenPublication) {
//                    from components.full
//                    // ......
//                }
//            }
//        }
//    }
//------3------
//    To publish all the build variants, you can use MultipleVariants.allVariants as a shortcut instead of filtering variants with MultipleVariants.includeBuildTypeValues and MultipleVariants.includeFlavorDimensionAndValues.
//    android {
//        publishing {
//            // Publishes all build variants with "default" component
//            multipleVariants {
//                allVariants()
//            }
//        }
//    }
//    afterEvaluate {
//        publishing {
//            publications {
//                allVariants(MavenPublication) {
//                    from components.default
//                    // ......
//                }
//            }
//        }
//    }
//------4------
//    This following code example shows how to create two publications one for demoRelease build variant, one for fullDebug & fullRelease build variants.
//    android {
//        publishing {
//            // Publish "demoRelease" build variant with "demoRelease" component
//            singleVariant("demoRelease")
//
//            // Publish "fullDebug" and "fullRelease" build variants with "full" component
//            multipleVariants("full") {
//                includeBuildTypeValues("debug", "release")
//                includeFlavorDimensionAndValues("mode", "full")
//            }
//        }
//    }
//    afterEvaluate {
//        publishing {
//            publications {
//                // Creates two publications with different artifactIds
//                full(MavenPublication) {
//                    from components.full
//                    groupId = 'com.example.MyLibrary'
//                    artifactId = 'final-full'
//                    version = '1.0'
//                }
//                demoRelease(MavenPublication) {
//                    from components.demoRelease
//                    groupId = 'com.example.MyLibrary'
//                    artifactId = 'final-demo'
//                    version = '1.0'
//                }
//            }
//        }
//    }
//------5------
//The testFixtures component is published by default with its main variant. To disable publishing the testFixtures component, see the following example.
//    afterEvaluate {
//        // Disable publishing test fixtures of release variant
//        components.release.withVariantsFromConfiguration(
//                configurations.releaseTestFixturesVariantReleaseApiPublication) { skip() }
//        components.release.withVariantsFromConfiguration(
//                configurations.releaseTestFixturesVariantReleaseRuntimePublication) { skip() }
//    }